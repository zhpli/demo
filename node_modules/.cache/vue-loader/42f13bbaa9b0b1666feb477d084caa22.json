{"remainingRequest":"D:\\myGitProject\\vue-element-admin\\node_modules\\_vue-loader@15.7.2@vue-loader\\lib\\index.js??vue-loader-options!D:\\myGitProject\\vue-element-admin\\src\\layout\\components\\Settings\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\myGitProject\\vue-element-admin\\src\\layout\\components\\Settings\\index.vue","mtime":1573048025883},{"path":"D:\\myGitProject\\vue-element-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myGitProject\\vue-element-admin\\node_modules\\_babel-loader@8.0.6@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\myGitProject\\vue-element-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\myGitProject\\vue-element-admin\\node_modules\\_vue-loader@15.7.2@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ThemePicker from '@/components/ThemePicker'\r\n\r\nexport default {\r\n  components: { ThemePicker },\r\n  data() {\r\n    return {}\r\n  },\r\n  computed: {\r\n    fixedHeader: {\r\n      get() {\r\n        return this.$store.state.settings.fixedHeader\r\n      },\r\n      set(val) {\r\n        this.$store.dispatch('settings/changeSetting', {\r\n          key: 'fixedHeader',\r\n          value: val\r\n        })\r\n      }\r\n    },\r\n    tagsView: {\r\n      get() {\r\n        return this.$store.state.settings.tagsView\r\n      },\r\n      set(val) {\r\n        this.$store.dispatch('settings/changeSetting', {\r\n          key: 'tagsView',\r\n          value: val\r\n        })\r\n      }\r\n    },\r\n    sidebarLogo: {\r\n      get() {\r\n        return this.$store.state.settings.sidebarLogo\r\n      },\r\n      set(val) {\r\n        this.$store.dispatch('settings/changeSetting', {\r\n          key: 'sidebarLogo',\r\n          value: val\r\n        })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    themeChange(val) {\r\n      this.$store.dispatch('settings/changeSetting', {\r\n        key: 'theme',\r\n        value: val\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}